#pragma rtGlobals=1		// Use modern global access method.// Procedure to read back the cursor position from 2D plots or images// highly inspirated by "Hook Peak Place" from WaveMetrics// and JEG ColorLegendTool from Jonathan Guyer//// author: Bela Farago farago@ill.frMenu "Graph"// adds a menu with two hierarchical items to strt and stop readback// this automagicaly ensures we call it only when a Graph window is the target	Submenu "Cursor Readback"		"Start Cursor reading",StartCursorReadBack()		help = {"Shows x,y(,z) of cursor position"}		"Stop Cursor reading", StopCursorReadBack()		help = {"Stops showing x,y(,z) of cursor position"}	EndEndfunction StartCursorReadBack()// creates a private folder. We use only one string	if (str2num(StringByKey("IGORVERS" ,IgorInfo(0)))<3.13)		beep		abort " Sorry this procedure needs IgorPro version >= 3.13"	endif	NewDataFolder/O root:Packages	NewDataFolder/O root:Packages:ReadBack	String/G root:Packages:ReadBack:gMessage	string win=winname(0,1)		// get graph window name	setwindow $win,hook = ReadBackHook,hookevents=3,hookcursor=18	ControlBar 30	SetVariable msg,pos={10,10},size={545,17},title=" Cursor at:",font="Monaco"	SetVariable msg,limits={-Inf,Inf,1},value= root:Packages:ReadBack:gMessageendfunction StopCursorReadBack()// remove readback line	if (str2num(StringByKey("IGORVERS" ,IgorInfo(0)))<3.13)		beep		abort " Sorry this procedure needs IgorPro version >= 3.13"	endifstring win=winname(0,1)	setwindow $win,hook = $""	ControlBar 0	KillControl msgendFunction ReadBackHook(s)	String s	variable ImReading	svar msg =  root:Packages:ReadBack:gMessage	Variable xpix,ypix,xaxval,yaxval,zval	String ImList	if( StrSearch(s,"EVENT:mousedown;",0) > 0 )		// this handles mousedown events		print msg		// on click print in history the latest readback value		return 1		// don't do normal processing	endif	if( StrSearch(s,"EVENT:mousemoved;",0) > 0 )		// readback happens here		ImList = ImageNameList("",";")		ImReading = strlen(ImList)				// do we have an image?		xpix= NumberByKey("MOUSEX",s)		ypix= NumberByKey("MOUSEY",s)		xaxval= AxisValFromPixel("","bottom",xpix)		yaxval= AxisValFromPixel("","left",ypix)		if (ImReading)							// if we have an image,  z reading is needed			wave ImageWave =$ StringFromList(0, ImList)				zval = ImageWave(xaxval)(yaxval)			sprintf msg,"x= %#12.6g, y= %#12.6g,z=%#12.6g",xaxval,yaxval,zval		else			sprintf msg,"x= %#12.6g, y= %#12.6g",xaxval,yaxval		endif	endif	return 0end